・画面を決める
・使用する値を決める
    →その上で、DBの設計を考える
・データをどのように使うか
    →CRUD図を作って、よく使うカラムを目印
    どのテーブルでよく使われる項目を特定しておくと、index設定するか目星が付けられる
    全体の 5%程度に絞り込めるカラムなど

    ・インデックスを張る
        どういう検索をするかを検討する
        画面を通して、検索が多いカラムを中心に
        joinで使うようなFKなどに
        カーディナリティが高いカラムとなれば、indexが有効となる
            →検索した結果、そのカラム(インデックス)で、十分絞り込めているかを表す指標
        複合インデックスを張って絞り込むのもあり(実行の仕方次第)
        indexを貼った後に、explainでSQLを実行する
            →typeの結果がALLであれば、indexが効いていないとみなす
        NULL値のレコードに対するインデックスは作成されない
        <>や!=などの条件はインデックスは効かない
        OR条件やIN句は絞り込まれないため、使用すると低速になる可能性がある
        インデックスはデータの更新が行われる際に、貼り直しを処理として行うため更新速度を低下させる

        ・気をつけるべきこと
            使用頻度の低いカラムに対して無駄にインデックスを張らない
            絞り込み効果が低いカラムにINDEXを張るな